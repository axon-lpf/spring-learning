<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="bookService" class="com.spring.source.code.aop.aspectXml.service.impl.BookServiceImpl"></bean>
    <bean id="bookProxy" class="com.spring.source.code.aop.aspectXml.BookServiceProxy"></bean>

    <aop:config>
        <aop:pointcut id="p" expression="execution(* com.spring.source.code.aop.aspectXml.service.impl.BookServiceImpl.queryBook(..))"/>
        <aop:aspect ref="bookProxy">
            <!--调用对应的切面方法-->
            <aop:before pointcut-ref="p" method="before"></aop:before>
            <aop:after pointcut-ref="p" method="after"></aop:after>
            <aop:after-returning pointcut-ref="p" method="afterReturning"></aop:after-returning>
            <aop:after-throwing pointcut-ref="p" method="afterThrowing"></aop:after-throwing>
            <aop:around pointcut-ref="p" method="around" arg-names="joinPoint"></aop:around>
        </aop:aspect>
    </aop:config>

    <!-- 开启aspectj 生成代理对象-->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
</beans>